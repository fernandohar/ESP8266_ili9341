#ifndef _MACARON_H_
#define _MACARON_H_
//25 X 21
const unsigned short macaron[525] PROGMEM={
0xFFFF, 0xFFDF, 0xF6FA, 0xFF5C, 0xFF1B, 0xEE37, 0xD657, 0xE5F7, 0xD5B5, 0x9C2D, 0xB512, 0xAC90, 0xA46F, 0xACF0, 0x940D, 0x93CC,   // 0x0010 (16) pixels
0xE698, 0xE698, 0xEF1A, 0xFF7D, 0xFF3C, 0xE637, 0xEDF6, 0xFED9, 0xFF9D, 0xFFFF, 0xFFDF, 0xF6FA, 0xFFDE, 0xFF5D, 0xB4B0, 0x8BCC,   // 0x0020 (32) pixels
0x7B09, 0x7B29, 0x8B4A, 0x8B2A, 0x8B6B, 0x8B6B, 0x934B, 0x938B, 0x9BCC, 0x7B29, 0x8349, 0x8BEC, 0xB533, 0xF6FB, 0xFEFB, 0xF617,   // 0x0030 (48) pixels
0xFEB9, 0xFF9D, 0xFFFF, 0xFFDF, 0xFF9D, 0xF6FA, 0x83AB, 0x72A7, 0xABEE, 0xD4F2, 0xE595, 0xF5D7, 0xFE38, 0xFE59, 0xFE59, 0xFE59,   // 0x0040 (64) pixels
0xFE38, 0xFE18, 0xE595, 0xCCD1, 0xA3CD, 0x8329, 0x7B09, 0xA46F, 0xEDF7, 0xFF5C, 0xFF9D, 0xFFFF, 0xFFFF, 0xEEDA, 0x72A7, 0x8B2A,   // 0x0050 (80) pixels
0xF5F7, 0xFE7A, 0xFE59, 0xFE38, 0xFE18, 0xFE17, 0xFDF7, 0xFDF7, 0xFDF7, 0xFDF7, 0xFE18, 0xFE38, 0xFE59, 0xFE7A, 0xFE38, 0xD4F2,   // 0x0060 (96) pixels
0x82E9, 0x72C8, 0xE677, 0xFFFF, 0xFFFF, 0xFFFF, 0x838B, 0x936B, 0xFE7A, 0xFE59, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7,   // 0x0070 (112) pixels
0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xFE18, 0xFE7A, 0xFE59, 0xA3CD, 0x6AA7, 0xEF1B, 0xFFDF, 0xDE37, 0x6A86,   // 0x0080 (128) pixels
0xF5F7, 0xFE7A, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7,   // 0x0090 (144) pixels
0xF5F7, 0xF5F7, 0xFE38, 0xFE9A, 0x934A, 0x8BAC, 0xF679, 0x93CC, 0xA3ED, 0xFDD6, 0xFDB6, 0xF5F7, 0xFE18, 0xFE18, 0xF5F7, 0xF5F7,   // 0x00A0 (160) pixels
0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xF5F7, 0xFE7A, 0xE575, 0x7B09, 0xDE37,   // 0x00B0 (176) pixels
0x6AA7, 0xE575, 0xFE17, 0xF4B1, 0xF4F2, 0xF533, 0xF5D6, 0xF618, 0xFE18, 0xF618, 0xF618, 0xF5F7, 0xF5F7, 0xF5F7, 0xF618, 0xF5F7,   // 0x00C0 (192) pixels
0xF618, 0xF618, 0xF618, 0xFE38, 0xFE18, 0xFDF7, 0xF575, 0x8B4A, 0xFE38, 0xA42E, 0x834A, 0xEDD6, 0xFE59, 0xFDB6, 0xF513, 0xF4D1,   // 0x00D0 (208) pixels
0xF512, 0xF595, 0xF595, 0xF5F7, 0xFDF8, 0xF5F7, 0xF618, 0xF5D7, 0xF5F8, 0xF5D7, 0xF5D7, 0xF595, 0xF554, 0xF533, 0xF4F2, 0xFE59,   // 0x00E0 (224) pixels
0xB42F, 0xFE9A, 0xCD94, 0x6246, 0x7AA7, 0xB450, 0xE5D6, 0xFE18, 0xFE18, 0xFD95, 0xFD33, 0xFD33, 0xF512, 0xF533, 0xF513, 0xF533,   // 0x00F0 (240) pixels
0xF4F2, 0xF513, 0xF512, 0xF4F2, 0xF513, 0xF533, 0xFD75, 0xFE59, 0xD533, 0x938B, 0xCDF6, 0x8B8B, 0xC573, 0xC5F6, 0x834A, 0x72A7,   // 0x0100 (256) pixels
0x8B2A, 0xAC2F, 0xDD54, 0xED75, 0xFDF7, 0xFDB6, 0xFDD7, 0xFDF7, 0xFD95, 0xFE18, 0xFDD6, 0xFDF7, 0xFE38, 0xFDF7, 0xFE59, 0xED96,   // 0x0110 (272) pixels
0xB42F, 0x5A04, 0x7B29, 0xFFBE, 0x8B6B, 0xCE35, 0xFFFF, 0xFFFD, 0xDEB8, 0xACF1, 0x93EC, 0x72A8, 0x72A8, 0x830A, 0x936B, 0xA3CD,   // 0x0120 (288) pixels
0x9B8C, 0xB42F, 0xABEE, 0xBC70, 0xBC50, 0xA3ED, 0x934B, 0x8B0A, 0x832A, 0x838B, 0xBD94, 0x93ED, 0xFF5D, 0x7B09, 0x838A, 0xFFFF,   // 0x0130 (304) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 0xE6D8, 0xD636, 0xBD72, 0xACF0, 0x942D, 0x9C4E, 0x93ED, 0x9C4E, 0x93CC, 0x8BCC, 0x8BEC, 0xACF0,   // 0x0140 (320) pixels
0xC5B4, 0xEF5A, 0xFFFF, 0xFF9B, 0x8B4B, 0xAC6F, 0x8B6B, 0x8B0A, 0x8BCB, 0xE6DA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0150 (336) pixels
0xFFFF, 0xFFFF, 0xFFFF, 0xFFFE, 0xFFFF, 0xFFFD, 0xFFFE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xCDF5, 0x6A87, 0x8B6B, 0x838A, 0xA3ED,   // 0x0160 (352) pixels
0xFE59, 0x936B, 0x6A87, 0x8BEC, 0xBD73, 0xE6F9, 0xFFDC, 0xFFFD, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFD,   // 0x0170 (368) pixels
0xEF3A, 0xCE36, 0xA4D1, 0x7B2A, 0x82E9, 0xB44F, 0x8B4A, 0xE6DA, 0x6AA7, 0xE575, 0xFE79, 0xD4F2, 0xA3CE, 0x832A, 0x7B09, 0x836B,   // 0x0180 (384) pixels
0x83AB, 0x9C4E, 0xACF0, 0xA4AF, 0xA4AF, 0xA4AF, 0x9C6E, 0x8BEC, 0x838A, 0x72E8, 0x7AE9, 0x934B, 0xB44F, 0xFE79, 0xCCD2, 0x7B2A,   // 0x0190 (400) pixels
0xFFFF, 0x946E, 0x934B, 0xFDD7, 0xFD54, 0xFD95, 0xFDD6, 0xE596, 0xCCD2, 0xB470, 0xB40F, 0xA3CD, 0xA3CD, 0x9BCD, 0x9BAD, 0xA3CD,   // 0x01A0 (416) pixels
0xAC0E, 0xC491, 0xD4F2, 0xF595, 0xFDD6, 0xFE17, 0xFDF7, 0x6A66, 0xCDD5, 0xFE97, 0xE594, 0x6266, 0xC4B1, 0xFE38, 0xFD74, 0xFD13,   // 0x01B0 (432) pixels
0xFD54, 0xFD75, 0xFDF7, 0xFDB6, 0xFDB5, 0xFE18, 0xFDD6, 0xFDB6, 0xFDF7, 0xFD95, 0xFD95, 0xFD74, 0xFD33, 0xFD75, 0xFDD6, 0x934A,   // 0x01C0 (448) pixels
0x83AB, 0xFFBE, 0xFB4D, 0xFCB3, 0xC573, 0x6266, 0xA3EE, 0xEDB6, 0xFE18, 0xFDD6, 0xFD95, 0xFD54, 0xFD54, 0xFD33, 0xFD33, 0xFD33,   // 0x01D0 (464) pixels
0xFD54, 0xFD54, 0xFD95, 0xFDB6, 0xFDB6, 0xFE38, 0xDD54, 0x8B2A, 0x7AE9, 0xEE79, 0xFFFF, 0xFBAE, 0xFC71, 0xFFFE, 0xD657, 0x836B,   // 0x01E0 (480) pixels
0x7AE9, 0x8B6B, 0xB44F, 0xD513, 0xED96, 0xFDF7, 0xFE18, 0xFDF7, 0xFDF7, 0xFE18, 0xEDB6, 0xDD75, 0xCCF3, 0xAC0E, 0x8B6B, 0x7309,   // 0x01F0 (496) pixels
0x942E, 0xF5D6, 0xFEFC, 0xFFFF, 0xFBCF, 0xFC51, 0xFF9C, 0xFF9E, 0xF71B, 0xE677, 0xA470, 0x8BAB, 0x7B29, 0x834A, 0x938C, 0x93AC,   // 0x0200 (512) pixels
};

const  uint8_t macaronMask[] PROGMEM={
  0x00, 0xff, 0x80, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0x00, 
0x3f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 
0x7f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x80, 0x6f, 0xff, 0xff, 0x80, 
0x75, 0xff, 0xfd, 0x80, 0xfd, 0x0b, 0xc3, 0x80, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 
0x7f, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xfc, 0x00, 
0x07, 0xff, 0xf8, 0x00
};
#endif

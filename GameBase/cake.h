#ifndef _CAKE_H_
#define _CAKE_H_

//25 x 22
const unsigned short cake[550] PROGMEM={
0xFFFF, 0xFF5C, 0xFEDA, 0xFE9A, 0xC5B5, 0x8B4A, 0x7245, 0x7245, 0x7286, 0x82C7, 0x934A, 0x9B29, 0x9B29, 0x9B4A, 0x9B6B, 0xA38B,   // 0x0010 (16) pixels
0xA3AC, 0x936A, 0xA3AC, 0xB3CD, 0xB46F, 0x7265, 0x7265, 0xFF9E, 0xFF9E, 0xFFFF, 0xFFDF, 0xF6DA, 0x9B8C, 0x6A46, 0x7286, 0xA38A,   // 0x0020 (32) pixels
0xE5B5, 0xCCB1, 0x82C7, 0x8285, 0x83CC, 0x8CB1, 0x8AE7, 0x92E7, 0xABED, 0xBC2E, 0xC46F, 0xABCC, 0x7AA7, 0x7AC8, 0xBCD1, 0x7265,   // 0x0030 (48) pixels
0x7265, 0xFFFF, 0xFFFF, 0xFF5C, 0x8329, 0x7266, 0x82E7, 0xBC4E, 0xFEBB, 0xFE59, 0xABED, 0x7246, 0x7A05, 0x83EF, 0x9FBF, 0x9EBB,   // 0x0040 (64) pixels
0x8BED, 0x82A6, 0x6A64, 0x8B29, 0xBC4F, 0x9349, 0x7265, 0x7A66, 0xC574, 0x7265, 0xFFFF, 0xFF7D, 0x9BED, 0x7245, 0x9349, 0x8308,   // 0x0050 (80) pixels
0xC490, 0xD513, 0x8AE8, 0x8B48, 0xD5AE, 0xCD4D, 0xBC4A, 0x9C4D, 0x9EBC, 0x9DD6, 0x8AC7, 0xC490, 0xFE9A, 0xFE18, 0x934A, 0x9328,   // 0x0060 (96) pixels
0x7286, 0x7AA7, 0xE6DA, 0x7265, 0xCDD5, 0x7245, 0x9349, 0x9329, 0x9329, 0x8B08, 0x82C7, 0x82C8, 0xA3CA, 0xFEF0, 0xFFD2, 0xFFB1,   // 0x0070 (112) pixels
0xB3E9, 0x8267, 0x8B08, 0x9B8A, 0xFDF7, 0xD533, 0x9349, 0x8B08, 0x9349, 0x9349, 0x6A24, 0x936A, 0x7265, 0xBCF1, 0x7265, 0x9B8A,   // 0x0080 (128) pixels
0xA3EC, 0x9B8A, 0x9349, 0x9349, 0x9349, 0x8B29, 0x8B09, 0x9B8A, 0xA3CA, 0x9349, 0x8B08, 0x8B08, 0x9349, 0x9349, 0x82E7, 0x8B08,   // 0x0090 (144) pixels
0x9349, 0x9349, 0x9349, 0x8B08, 0x7AA7, 0xC574, 0xBCF2, 0x6204, 0x9369, 0xAC0C, 0xABEC, 0x9349, 0x8B08, 0x9349, 0x9349, 0x8B29,   // 0x00A0 (160) pixels
0x8AE9, 0x8AE9, 0x9329, 0x9369, 0x9B8A, 0x936A, 0x8B08, 0x8B08, 0x9349, 0x9349, 0x9329, 0xA3CB, 0xAC0C, 0x7286, 0xAC6F, 0x93ED,   // 0x00B0 (176) pixels
0xA3ED, 0x72A7, 0x7286, 0x7AA7, 0x7AC7, 0x8309, 0x7AC8, 0x9349, 0x9349, 0x9349, 0x9349, 0x9349, 0xAC0C, 0xB42D, 0x8308, 0x7AC8,   // 0x00C0 (192) pixels
0x8309, 0x7AA7, 0x7AA7, 0x82E8, 0xA3AB, 0x9B8A, 0x72A7, 0xCD95, 0x93CC, 0xFEFB, 0xD533, 0xA3ED, 0xA3ED, 0xD533, 0xEE17, 0xAC2E,   // 0x00D0 (208) pixels
0x7286, 0x7AA7, 0x7AC7, 0x7AA7, 0x7AC7, 0x82E8, 0x7286, 0x8309, 0xDDB5, 0xEE16, 0xB46F, 0xAC2E, 0x938B, 0x6A66, 0x7287, 0x7AE8,   // 0x00E0 (224) pixels
0xB4F1, 0xA42E, 0xFEFB, 0xFEFB, 0xFEDA, 0xFEDA, 0xFEDB, 0xFEFB, 0xFEBA, 0xD533, 0xAC2E, 0xA3ED, 0xCCF2, 0xCCF2, 0xA3ED, 0xAC2E,   // 0x00F0 (240) pixels
0xEDD6, 0xFF1B, 0xFEDA, 0xFEDB, 0xFEFB, 0xFE58, 0xC4F2, 0xD574, 0xB48F, 0x838B, 0xA3ED, 0xFEFB, 0xFE79, 0xFE78, 0xFE78, 0xFE78,   // 0x0100 (256) pixels
0xFE58, 0xFE79, 0xFEFB, 0xFEDA, 0xFEBA, 0xFEFB, 0xFEFB, 0xFEDA, 0xFEFB, 0xFEBA, 0xFE58, 0xFE78, 0xFE78, 0xFE78, 0xFE99, 0xFEFB,   // 0x0110 (272) pixels
0xFFBE, 0xB490, 0x940D, 0x7B4A, 0xF5F7, 0xFF1B, 0xFEDA, 0xFEDA, 0xFE58, 0xFE78, 0xFE99, 0xFE79, 0xFE78, 0xFE79, 0xFE78, 0xFE78,   // 0x0120 (288) pixels
0xFE78, 0xFE78, 0xFE78, 0xFE79, 0xFE99, 0xFE58, 0xFEDA, 0xFEFB, 0xFEFB, 0xFE99, 0x834A, 0xC595, 0x936B, 0x6AA7, 0xDDB6, 0xDD95,   // 0x0130 (304) pixels
0xD534, 0xFF1B, 0xFEBA, 0xF638, 0xFEBA, 0xFEBA, 0xFEDA, 0xFEFB, 0xFE99, 0xFEB9, 0xFEFB, 0xFEDA, 0xFEBA, 0xFE79, 0xFF3C, 0xD534,   // 0x0140 (320) pixels
0xC4D2, 0xD574, 0x72A8, 0x8B8B, 0xF739, 0xCD12, 0x62A6, 0x832A, 0x8B6A, 0x8349, 0xC4F3, 0xB491, 0x6A67, 0xBCD1, 0xF699, 0xA3EE,   // 0x0150 (336) pixels
0x9BAD, 0xFEBA, 0xEDF6, 0x938C, 0xD574, 0xBC91, 0x830A, 0x9BCE, 0x836A, 0x838A, 0x93CB, 0x8B88, 0xAC90, 0xFFBD, 0xF75D, 0x938B,   // 0x0160 (352) pixels
0xD5EF, 0xF794, 0xEEB2, 0x8349, 0x9C4C, 0xD650, 0x9BEB, 0x72CA, 0xACCC, 0x9C4B, 0x7B0B, 0x834B, 0x9C6B, 0x72C8, 0x8BCB, 0xC610,   // 0x0170 (368) pixels
0x9C0B, 0xE671, 0xFFB4, 0xFF73, 0xA46C, 0xCD55, 0xFF1D, 0xFFFF, 0x9C2F, 0xBD4D, 0xFFF6, 0xFF52, 0xFF73, 0xFF94, 0xFFF4, 0xF733,   // 0x0180 (384) pixels
0xDE0F, 0xFFF5, 0xFFF5, 0xBD4E, 0xD610, 0xFFF5, 0xEEB1, 0xF6F2, 0xFFF4, 0xFFF6, 0xFF52, 0xFFF4, 0xE650, 0x8BAD, 0xFFBE, 0xFFDF,   // 0x0190 (400) pixels
0xFEDA, 0xD534, 0x838A, 0xFFB5, 0xFF11, 0xFF31, 0xFF73, 0xFED1, 0xFFB5, 0xFF93, 0xFF12, 0xFF52, 0xFFB3, 0xFFF5, 0xFED0, 0xFFB4,   // 0x01A0 (416) pixels
0xFF72, 0xFEF1, 0xFF53, 0xFED1, 0xFFF5, 0x9C0A, 0xB4B2, 0xFFFF, 0xFF3C, 0xF67A, 0xFEFC, 0x8B8C, 0xD60F, 0xFFF4, 0xFED0, 0xFF53,   // 0x01B0 (432) pixels
0xFEF1, 0xFF53, 0xFF12, 0xFF32, 0xFF32, 0xFEF1, 0xFF53, 0xFEF1, 0xFF74, 0xFEF1, 0xFF32, 0xFEF1, 0xFF72, 0xF6F2, 0x83CC, 0xF3AE,   // 0x01C0 (448) pixels
0xFB2C, 0xFAEB, 0xFFFF, 0xFFFF, 0xBD54, 0x8327, 0xFFF6, 0xFF92, 0xFF32, 0xFF11, 0xFF32, 0xFF12, 0xFF12, 0xFF32, 0xFEF1, 0xFF53,   // 0x01D0 (464) pixels
0xFEF2, 0xFF53, 0xFED1, 0xFF53, 0xFF72, 0xFFF5, 0x9C2A, 0x9BCF, 0xFEBB, 0xFE18, 0xFE18, 0xFF3C, 0xFF3C, 0xFF1C, 0x8B6C, 0x8BAA,   // 0x01E0 (480) pixels
0xD650, 0xFFB4, 0xFFD4, 0xFFD3, 0xFFD4, 0xFF93, 0xFFB3, 0xFF72, 0xFFD4, 0xFF93, 0xFFF5, 0xFFB3, 0xFFD4, 0xE6B1, 0xA44A, 0x72E9,   // 0x01F0 (496) pixels
0xEEFB, 0xFF9E, 0xFF7D, 0xFF7D, 0xFE79, 0xFE7A, 0xFEDB, 0xFF5C, 0xB491, 0x8B6B, 0x93EB, 0xACAC, 0xBD2E, 0xCD8E, 0xD60F, 0xD5EE,   // 0x0200 (512) pixels
0xD5CE, 0xCDCF, 0xCD8D, 0xBD6E, 0xAD0E, 0x93EA, 0x834B, 0xA40F, 0xEE79, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFEBA, 0xFEBA, 0xFE79,   // 0x0210 (528) pixels
0xFF5C, 0xFEBA, 0xE5F5, 0xBD34, 0xA451, 0x9BCE, 0x9C0E, 0x8BAD, 0x93CD, 0x93CD, 0x8B8C, 0x940E, 0x9BAD, 0x9B4C, 0xA470, 0xDE58,   // 0x0220 (544) pixels
};

const  uint8_t cakeMask[] PROGMEM={
  0x0f, 0xff, 0xf8, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xfe, 0x00, 
0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 
0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0x80, 
0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xfe, 0x00, 
0x7f, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xf8, 0x00, 
0x0f, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xe0, 0x00
};
#endif
